services:
  app:
    image: YOUR_REGISTRY/YOUR_IMAGE:latest
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://YOUR_DB_USER:YOUR_DB_PASSWORD@postgres:5432/YOUR_DB_NAME
      - HUSKY=0
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=YOUR_DB_USER
      - POSTGRES_PASSWORD=YOUR_DB_PASSWORD
      - POSTGRES_DB=YOUR_DB_NAME
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U YOUR_DB_USER -d YOUR_DB_NAME"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  portainer_data:
